@page "/QuestList"

@using ChoreLore.Data
@using ChoreLore.Models.ViewModels
@using Microsoft.AspNetCore.Identity
@using Services.Interfaces
@using Models
@using System.Diagnostics

@inject IChoreService ChoreService
@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@rendermode InteractiveServer

<PageTitle>Chore Lore Dashboard</PageTitle>

<h1>Chore Lore Dashboard</h1>
<h2><strong>Total Gold:</strong> @user?.TotalGold gp</h2>

<div class="container">
    <div class="row">
        @if (quests == null)
        {
            <p>Fetching quests...</p>
        }
        else
        {
            if (quests.Count == 0)
            {
                <p><strong>All Quests Complete! Huzzah!</strong></p>
            }
            else
            {
                @foreach (var quest in quests)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card text-center h-100 @( quest.Completed ? "bg-success text-white" : "" )">
                            <div class="card-header">
                                <h3>@quest.Quest.Name</h3>
                            </div>
                            <div class="card-body">
                                <p class="card-text"><strong>Reward:</strong> @quest.Quest.Gold gold</p>
                                <p class="card-text"><strong>Steps Remaining:</strong> @(quest.Quest.TimesAWeek - quest.CompletionCount)</p>
                                <p class="card-text"><strong>Description:</strong> @quest.Quest.Description</p>
                            </div>

                            @if (quest.Completed)
                            {
                                <div class="card-footer">
                                    <strong>Quest Completed!</strong>
                                </div>
                            }
                            else
                            {
                                <div class="card-footer">
                                    <button class="btn btn-primary" @onclick="@(() => CompleteChore(quest.Quest.Id))">@((quest.Quest.TimesAWeek - quest.CompletionCount) > 1 ? "Complete Step!" : "Complete Quest!")</button>
                                </div>
                            }

                        </div>
                    </div>
                }
            }
        }
    </div>
</div>





@code
{
    private List<QuestViewModel>? quests;
    private ApplicationUser? user;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var authUser = authState.User;

        var identityUser = await UserManager.GetUserAsync(authUser);
        if (identityUser is ApplicationUser applicationUser)
        {
            user = applicationUser;
            quests = await ChoreService.GetUserChoresAsync(applicationUser.Id);
        }
        else
        {
            NavigationManager.NavigateTo("/Account/Login");
        }
    }

    private async Task CompleteChore(int choreId)
    {
        if (user != null)
        {
            await ChoreService.CompleteChoreAsync(choreId, user.Id);
            user = await UserManager.FindByIdAsync(user.Id); // refresh XP & level
            quests = await ChoreService.GetUserChoresAsync(user.Id); // refresh list
            StateHasChanged();
        }
    }
}